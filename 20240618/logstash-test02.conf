input {
  file {
    path => "C:/k_digital/kdigital/elasticStack/logstash-7.17.21/config/filter-example.log"
    start_position => "beginning"
    sincedb_path => "nul"
  }
}

# 필터
filter {
  # dissect 플러그인
  dissect {
    mapping => {
      # dissect 플러그인 mapping을 이용해서 message 필드에 저장된 값을 분리해서 필드로 저장한다.
      # %{필드명}와 같이 작성하면 "%{"와 "}" 사이의 필드명으로 새 필드가 만들어진다.
      # "%{"와 "}" 외부의 문자들은 모두 구분자가 된다.
      # [%{timestamp}]% => 1번째 대괄호 사이의 문자열을 timestamp 필드를 만들어 저장한다.
      # "[%{timestamp}]% [%{id}]"와 같이 패턴을 지정하면 1번째 대괄호와 2번째 대괄호 사이에 공백이 1칸 로그와 3칸인 로그가
      # 존재하기 때문에 "_dissectfailure" 에러가 발생된다.
      # [2024-06-18 11:47:51] [ID1] 192.168.0.35 9500 [INFO] - connected.
      # [2024-06-18 11:49:05]   [ID2] 218.35.25.165 1004 [warn] - busy server
      # 이런 문제를 해결하려면 연속해서 나타나는 공백을 "%{?->}"를 사용해서 무시하면 된다.
      # [%{id}] => 2번째 대괄호 사이의 문자열을 id 필드를 만들어 저장한다.
      # %{ip} => id 다음의 공백과 공백 사이의 문자열을 ip 필드를 만들어 저장한다.
      # %{port} => ip 다음의 공백과 공백 사이의 문자열을 port 필드를 만들어 저장한다.
      # [%{level}] => 3번째 대괄호 사이의 문자열을 level 필드를 만들어 저장한다.
      # %{message} => 마지막 문자열을 message 필드를 만들어 저장한다.
      "message" => "[%{timestamp}]%{?->}[%{id}] %{ip} %{port} [%{level}] - %{message}"
    }
  }
}

output {
  stdout { }
}