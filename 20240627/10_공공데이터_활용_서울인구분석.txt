공공 데이터를 엘라스틱서치로 가져와서 분석하고 시각화를 한다.

분석을 위해서 데이터를 찾다보면 국민 편익 향상과 일자리 창출을 목적으로 정부에서 제공하는 양질의 공공 데이터
활용하는데 우리나라에서 공공데이터로 가장 많이 활용되는 두 가지 사이트가 있다.
전국 단위 데이터를 제공하는 공공데이터 포털(https://www.data.go.kr/)
서울시의 데이터만 제공하는 서울 열린데이터광장(https://data.seoul.go.kr/)

서울 열린데이터광장에 회원가입 후 인증키를 발급받는다.
키바나 Maps에서 사용할 벡터 레이어를 만들기 위해서 가장 안정적인 버전의 QGIS를 다운로드 받아 기본 설정으로 설치한다.
https://www.qgis.org/ko/site/forusers/download.html

키바나 7.4 버전까지는 두 가지 지도 시각화 타입이 있었고 7.5 버전 부터는 두 가지 지도 시각화 타입이 통합되었고
현재 사용중인 키바나(7.17)의 Visualize Library에서 지도에 관련된 메뉴는 Maps 하나만 보인다.
키바나 설정 파일을 수정하면 Maps로 통합되기 전의 두 가지 시각화 타입 메뉴가 나타난다.

******************************************************************************************************************
kibana.yml 파일 내용
******************************************************************************************************************
...
# 구글 인공위성 맵
#map.tilemap.url:
  #"https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}"

# 7.4 이전 버전에서 사용했던 지도 시각화 메뉴 사용하기
xpack.maps.showMapVisualizationTypes: true
******************************************************************************************************************

햄버거 버튼 => Visualize Library => Create visualization 버튼 => Aggregation based 클릭
Coordinate Map(위경도 데이터 시각화)과 Region Map(지역 정보 시각화)이 보일것이고 Maps 보다 가볍기 때문에 Maps 대신
사용해도 된다.

==================================================================================================================

데이터를 로그스태시로 읽어서 엘라스틱서치에 저장한다.

서울 열린데이터에서 공공데이터를 가져오는 방법은 파일을 다운로드하는 방법과 open API 형태로 데이터를 제공받는
방법이 있다.
파일 다운로드는 인증키가 필요하지 않지만 최신 데이터를 제공받기 힘들고 open API를 사용하려면 인증키가 필요하다.
"동별 인구"로 검색해서 "서울시 등록인구 (동별) 통계" 데이터를 전체 선택해서 다운로드 받아 사용한다.

로그스태시로 데이터 읽기
******************************************************************************************************************
logstash-spop.conf 파일 내용
******************************************************************************************************************
input {
  file {
    path => "C:/k_digital/kdigital/elasticStack/seoul_pop.txt"
    start_position => "beginning"
    sincedb_path => "nul"
  }
}

output {
  stdout { }
}
******************************************************************************************************************
logstash.bat -f ..\config\logstash-spop.conf --log.level error

==================================================================================================================

불필요한 문자 제거하기
******************************************************************************************************************
logstash-spop.conf 파일 내용
******************************************************************************************************************
input {
  file {
    path => "C:/k_digital/kdigital/elasticStack/seoul_pop.txt"
    start_position => "beginning"
    sincedb_path => "nul"
  }
}

filter {
  # mutate 필터의 gsub 옵션을 사용해서 특정 문자 치환하기
  mutate {
    # message 필드의 모든 ","를 공백으로 치환한다.
    gsub => ["message", ",", ""]
  }
}

output {
  stdout { }
}
******************************************************************************************************************

==================================================================================================================

데이터 전처리 한다.
******************************************************************************************************************
logstash-spop.conf 파일 내용
******************************************************************************************************************
input {
  file {
    path => "C:/k_digital/kdigital/elasticStack/seoul_pop.txt"
    start_position => "beginning"
    sincedb_path => "nul"
  }
}

filter {
  mutate {
    gsub => ["message", ",", ""]
  }
  # csv 필터로 읽어들인 seoul_pop.txt 파일을 전처리 한다.
  csv {
    skip_header => true
    # 구분자가 tab 이므로 "\t"가 아니라 직접 키보드의 tab키를 눌러 입력한다.
    separator => "	"
    # 각 필드의 의미
    # GU: 구
    # DONG: 동
    # SEDAE: 세대수
    # GYE_1: 전체 인구수
    # NAMJA_1: 전체 남자 인수구
    # YEOJA_1: 전체 여자 인구수
    # GYE_2: 한국인 전체 인구수
    # NAMJA_2: 한국인 전체 남자 인구수
    # YEOJA_2: 한국인 전체 여자 인구수
    # GYE_3: 외국인 전체 인구수
    # NAMJA_3: 외국인 전체 남자 인구수
    # YEOJA_3: 외국인 전체 여자 인구수
    # INGU: 세대당 평균 인구수
    # N65SE: 65세 이상 인구수
    columns => [
        "GIGAN", "GU", "DONG", "SEDAE", "GYE_1", "NAMJA_1", "YEOJA_1", "GYE_2", "NAMJA_2", "YEOJA_2", 
        "GYE_3", "NAMJA_3", "YEOJA_3", "INGU", "N65SE"
    ]
    remove_field => ["@version", "path", "@timestamp", "host", "message", "GIGAN"]
  }
  # if 필터로 조건에 만족하는 데이터(행)를 제거한다.
  if [DONG] == "소계" or [DONG] == "동별(3)"{
    drop { }
  }
}

output {
  stdout { }
}
******************************************************************************************************************

==================================================================================================================

엘라스틱서치에 인덱스를 만들고 전처리한 데이터를 저장한다. => 다이나믹 매핑
******************************************************************************************************************
logstash-spop.conf 파일 내용
******************************************************************************************************************
...
output {
  stdout { }
  elasticsearch {
    index => "seoul_pop"
  }
}
******************************************************************************************************************

==================================================================================================================

엘라스틱서치에 인덱스를 만들고 전처리한 데이터를 저장한다. => 명시적 매핑

******************************************************************************************************************
Dev Tools 코딩
******************************************************************************************************************
PUT seoul_pop2
{
  "mappings": {
    "properties": {
      "GU": {"type": "keyword"},
      "DONG": {"type": "keyword"},
      "SEDAE": {"type": "integer"},
      "GYE_1": {"type": "integer"},
      "NAMJA_1": {"type": "integer"},
      "YEOJA_1": {"type": "integer"},
      "GYE_2": {"type": "integer"},
      "NAMJA_2": {"type": "integer"},
      "YEOJA_2": {"type": "integer"},
      "GYE_3": {"type": "integer"},
      "NAMJA_3": {"type": "integer"},
      "YEOJA_3": {"type": "integer"},
      "INGU": {"type": "double"},
      "N65SE": {"type": "integer"}
    }
  }
}

GET seoul_pop2/_mapping
POST _sql?format=txt
{
  "query": "describe seoul_pop2"
}
GET seoul_pop2/_search
******************************************************************************************************************

******************************************************************************************************************
logstash-spop.conf 파일 내용
******************************************************************************************************************
...
output {
  stdout { }
  elasticsearch {
    index => "seoul_pop2"
  }
}
******************************************************************************************************************

==================================================================================================================

공공데이터 지리 정보 벡터 데이터 다운로드

공공데이터는 다양한 지리 정보도 제공한다. 국가공간정보포털(http://www.nsdi.go.kr/) 2023.12.31 서비스 종료
1. "행정동 경계 데이터"로 검색해서 공공데이터 포털(https://www.data.go.kr/data/15125055/fileData.do)에서 
https://www.vworld.kr/dtmk/dtmk_ntads_s002.do?dsId=30017를 클릭한다.
2. 브이월드(https://www.vworld.kr/v4po_main.do)에 접속해서 공간정보 다운로드 => 오픈마켓 클릭 후 행정동경계 검색
(센서스경계)행정동경계(https://www.vworld.kr/dtmk/dtmk_ntads_s002.do?dsId=30017)를 클릭한다.
위 1, 2 어느 방법을 사용해도 똑같고 BND_ADM_DONG_PG.zip 파일을 다운로드 받는다.
다운로드 받은 파일 압출을 풀면 geojson 형태가 아닌 BND_ADM_DONG_PG.shp 파일이 보인다. 국가에서 제공하는 
공간 데이터는 대부분 확장명이 shp로 제공된다.

shp 파일은 지도를 표현하기 위해 점, 선, 도형 같은 벡터 정보를 가지고 있는 파일로 속성 데이터가 저장된 dbf, 
좌표 데이터가 저장된 shp, 도형 인덱스가 저장된 shx 파일로 구성되고 키바나 Maps는 geojson 파일이 필요하기 때문에
변환해서 사용해야 한다.

==================================================================================================================

QGIS를 이용해서 geojson 파일 만들기

QGIS는 공간 데이터를 처리하기 위한 툴로, 파일 변환인 일부 기능일 뿐이며 공간 연산이나 지리 데이터 확인 등 
지리/공간에 관련된 여러 작업들을 할 수 있다.
shp 파일 형식을 geojson 형식으로 변환하기 위해 QGIS라는 툴을 사용한다. QGIS를 이용하여 공간 연산과 geojson 형태의
벡터 레이어를 만들 수 있다.

QGIS Desktop 3.34.7를 더블클릭해서 QGIS를 실행하고 => 프로젝트 => 새로 생성 => 배경 지도를 추가한다.
배경 지도는 왼쪽 메뉴바 탐색기 XYZ Tiles 우클릭 => 새 연결 => XYZ 연결 대화상자에서 이름과 URL을 입력한다.
벡터 레이어를 불러오려면 레이어 => 레이어 추가 => 벡터 레이어 추가 => 벡터 데이터 셋에서 BND_ADM_DONG_PG.zip 파일 선택

서울시 행정동만 있으면 되기 때문에 필터를 이용해 서울시 행정동만 가져와서 geojson 파일을 만든다.
BND_ADM_DONG_PG.shp 레이어 우클릭 => 필터 설정 => 쿼리 작성 대화상자에서 제공자 전용 필터 표현식에 "ADM_CD" LIKE '11%'를
입력하고 확인 버튼을 클릭하면 필터가 적용되면서 서울에 있는 행정동만 보인다.
BND_ADM_DONG_PG.shp 레이어 우클릭 => 내보내기 => 피처를 다른 이름으로 저장 => 벡터 레이어를 다른 이름으로 저장
대화상자에서 geojson 파일 이름을 입력하고 좌표계는 EPSG:4326를 선택하고 확인 버튼을 누르면 geojson 파일로 저장된다.
키바나는 위경도 죄표계만 인식할 수 있기 때문에 좌표계는 반드시 EPSG:4326을 선택해야 한다.























