비츠(Beats)

로그스태시는 여러 시스템에 공통(범용)으로 사용하는 다소 무겁고 사용하기 복잡한 데이터 수집기라면 비츠는 단일 시스템(전용)에서
사용하는 가볍고 사용하기 쉬운 Go 언어로 작성된 데이터 수집기이다.
비츠는 설정이 간편하고 별도의 데이터 가공을 위한 프로그래밍 작업이 필요하지 않으므로 원하는 비트를 확보했다면 빠르게 데이터를
수집할 수 있다.

비트는 가벼운 프로그램을 지양하기 때문에 하나의 목적만을 수행한다. 비트는 목적 별로 다양한 비트들이 존재한다.
데이터를 수집하는 데 특화되어 있는데, 데이터를 수집하는 역할만 보면 로그스태시와 유사해 보일 수 있으나 차이가 있다.
로그스태시 다양한 플러그인을 포함하는 범용성이 높은 만큼 무겁게 움직이는 반면, 비트는 범용성을 포기하고 특정 목적만 수행하도록
가볍게 구성되어 어플리케이션의 성능에 영향을 미치지 않고 필요한 데이터를 수집할 수 있다.

데이터 가공을 완전히 지원하지 않는 것도 아니므로 간단한 데이터 수집이라면 로그스태시 보다 비트를 사용하는 것이 성능상 유리하다.
좀 더 전문적이고 범용적인 대량의 데이터 가공이 필요할 경우에는 로그스태시가 더 적합하다.

비트에서 수집한 데이터는 엘라스틱서치로 바로 보내거나 각 비트에서 발생된 데이터를 로그스태시에서 일괄적으로 가공 처리를 거쳐
엘라스틱서치로 보낸다.

비트 종류
파일 비트: 로그 파일을 실시간으로 읽어서 전송하는 가장 많이 사용되는 비트
패킷 비트: 네트워크 패킷 분석기로 네트워크 데이터를 수집하는 비트
윈로그 비트: 윈도우에서 발생하는 이벤트 로그를 수집하는 비트
메트릭 비트: 운영체제를 포함한 서비스로부터 주기적으로 통계 지표를 수집하는 비트
하트 비트: 서비스가 살아있나 죽었나 확인하고 모니터링하는 비트
오딧 비트: 리눅스 시스템의 보안 정보를 감사는 auditd에서 생성하는 로그를 수집하는 비트
펑션 비트: 클라우드의 서버리스 환경에서 사용할 수 있고 아마존의 큐 데이터 등을 수집하는 비트

# ===========================================================================================================

파일 비트

파일 비트는 기본적으로 파일에 적재되는 로그들을 가져오는 역할을 한다.
파일의 로그를 쉽게 수집하도록 도와주며 엘라스틱서치와 키바나를 이용해 수집한 로그를 활용할 수 있게 도와준다.
Go 언어로 작성되어 자바 가상 머신같은 무거운 라이브러리가 따로 필요하지 않아서 가볍기 때문에 수집할 시스템에 부담 없이
설치될 수 있고 로그스태시 처럼 간단한 필터 작업도 가능하다.

파일 비트 구성 요소

입력에서 지정된 경로를 모니터링하다가 새로운 파일이 발견되면 하베스터를 생성해서 데이터를 읽어들이고 스풀러로
로그스태시, 엘라스틱서치, 카프카, 레디스 등으로 전달한다.
입력(input): 하베스터에 대한 입력 소스를 정한다.
하베스터(harvester): 입력에 명시된 파일의 데이터를 직접 수집하는 주체이다.
스풀러(spooler): 하베스터가 수집한 데이터를 로그스태시나 엘라스틱서치로 전달한다.

파일 비트 설치 - 필수

엘라스틱서치에서 기본적으로 제공하는 비트와 사용자가 직접 만든 비트는 설치 방법이 조금씩 다르다.
엘라스틱서치 공식 사이트에서 파일 비트를 다운받고 압축을 해제한다.
파일 비트는 엘라스틱서치가 기본적으로 제공하는 비트이므로 https://www.elastic.co/kr/downloads/beats 다운로드 할 수 있다.
엘라스틱서치가 기본적으로 제공하지 않는(사용자들이 만든, 커스텀) 비트는 아래의 온라인 공식 문서에서 다운로드 할 수 있다.
https://www.elastic.co/guide/en/beats/libbeat/7.17/community-beats.html

파일 비트가 원하는 로그 파일을 수집할 수 있도록 설정 파일(filebeat.yml)을 수정해서 setup을 실행한다. - 필수

파일 비트에서 설정 가능한 모든 파라미터는 아래의 온라인 공식 문서에서 확인할 수 있다.
파일 비트 input type 온라인 공식 문서
https://www.elastic.co/guide/en/beats/filebeat/7.17/configuration-filebeat-options.html#filebeat-input-types
파일 비트 output type 온라인 공식 문서
https://www.elastic.co/guide/en/beats/filebeat/7.17/configuring-output.html
파일 비트 설정 파일 작성 방식은 로그스태시와 비슷해 보이지만 플러그인을 이용해서 입력/필터/출력을 설정하는
로그스태시와 달리 파일 비트는 복잡한 설정이 없다.

# ***********************************************************************************************************
filebeat.yml 파일의 내용
# ***********************************************************************************************************
# ========================== Filebeat inputs ==========================
filebeat.inputs:
  # input type은 파일 비트 7.17.0 버전 부터 log 대신 filestream을 사용한다.
  # filestream은 paths에 지정된 파일의 로그를 한 줄씩 가져온다.
- type: filestream
  id: my-filestream-id
  enabled: true
  paths:
    - C:/k_digital/kdigital/elasticStack/elasticsearch-7.17.21/logs/*.log

# =============================== Kibana ==============================
setup.kibana:
  host: "localhost:5601"

# ============================== Outputs ==============================
output.elasticsearch:
  hosts: ["localhost:9200"]
# ***********************************************************************************************************

파일 비트의 setup 옵션을 실행한다. -e 옵션은 모니터에 오류나 로그를 출력한다.
# ***********************************************************************************************************
filebeat.exe setup -e
# ***********************************************************************************************************
엘라스틱서치 인덱스 템플릿, 수명주기 정책과 같은 인덱스 관리 정보와 인제스트 파이프라인 그리고 키바나 샘플 대시보드까지
설치하기 때문에 시간이 조금 걸린다.
마지막에 Loaded Ingest pipelines까지 보이면 setup이 완료된 것이다.
setup이 완료되고 키바나에 가보면(햄버거 버튼 => Analytics => Dashboard) 파일 비트 관련 부분이 추가된 것을 확인할 수 있다.

파일 비트를 실행한다. - 필수
파일 비트와 키바나, 엘라스틱서치 간의 setup이 끝나면 파일 비트를 실행하면 된다.
# ***********************************************************************************************************
filebeat.exe -e
# ***********************************************************************************************************

엘라스틱서치나 키바나 대시보드에서 파일 비트가 읽어들인 데이터를 확인한다. - 선택
파일 비트가 만들어준 엘라스틱서치 인덱스 확인하기
햄버거 버튼 => Management => Stack Management => Index Management 메뉴를 클릭하면 "filebeat-*"라는 이름의 인덱스가 보인다.
파일 비트가 읽어들인 로그 내용 확인하기
햄버거 버튼 => Analytics => Discover 클릭하고 인덱스 패턴을 "filebeat-*"를 선택하면 파일 비트가 읽어들인 로그 데이터가 보인다.

# ===========================================================================================================

파일 비트의 유용한 설정
파일 비트를 설치한 폴더에 filebeat.reference.yml라는 파일이 있다.
filebeat.reference.yml 파일은 파일 비트의 모든 설정에 대한 기본값이 적혀있는 참조 파일이다.
사용하는 버전에 맞춰 추가, 삭제된 옵션이 모두 포함되어 있으니 설정 파일을 수정할 때 참고한다.

# ***********************************************************************************************************
filebeat.yml 파일의 내용
# ***********************************************************************************************************
# ========================== Filebeat inputs ==========================
filebeat.inputs:
- type: filestream
  id: my-filestream-id
  enabled: true
  paths:
    - C:/k_digital/kdigital/elasticStack/elasticsearch-7.17.21/logs/*.log
  # ignore_older는 input type이 filestream 사용할 수 있는 옵션으로 새로운 파일 탐색 시
  # 오래된 파일은 읽어들이지 않고 무시하기 위한 설정이다.
  # 10h(10시간), 10m(10분) 처럼 타임 스트링 형식으로 작성한다.
  # 기본값은 0이고 파일의 생성, 수정 시간과 무관하게 모는 내용을 읽어들인다.
  ignore_older: 1h

  # include_lines는 정규식을 이용해서 매칭된 라인만 파일 비트가 수집한다.
  # ^ERROR: ERROR로 시작하는, WARN$: WARN으로 끝나는, ^.*(INFO).*: INFO를 포함하는 
  include_lines: ['^.*(ERROR).*', '^.*(WARN).*']
  # exclude_lines는 정규식을 이용해서 매칭된 라인은 파일 비트가 수집하지 않는다.
  # "DBG"로 시작하는 로그 라인은 파일 비트가 수집하지 않는다.
  exclude_lines: ['^.*(INFO).*']

  # exclude_files는 정규식을 이용해서 매칭된 파일의 로그는 수집하지 않는다.
  exclude_files: ['^gc'] # ['\.gz$']: .gz로 끝나는 파일

# =============================== Kibana ==============================
setup.kibana:
  host: "localhost:5601"

# ============================== Outputs ==============================
output.elasticsearch:
  hosts: ["localhost:9200"]
# ***********************************************************************************************************

# ===========================================================================================================

멀티 라인 로그






























