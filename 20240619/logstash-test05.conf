input {
  file {
    path => "C:/k_digital/kdigital/elasticStack/logstash-7.17.21/config/filter-example2.log"
    start_position => "beginning"
    sincedb_path => "nul"
  }
}

filter {
  grok {
    # TIMESTAMP_ISO8601 정규식 패턴은 아래와 같이 정의되어 있고 년, 월, 일의 구분자로 "-"만 허용한다.
    # %{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?%{ISO8601_TIMEZONE}?
    # 날짜/시간 데이터는 사용자가 다양한 형태로 만들어 사용하기 때문에 TIMESTAMP_ISO8601 정규식 패턴을 사용하면
    # "2024-06-19"는 정상 처리되지만 "2024/06/19"나 "2024.06.19"는 구분자로 "/", "."을 사용하기 때문에 에러가 발생된다.
    pattern_definitions => {
      # grok 플러그인은 pattern_definitions을 이용해서 사용자 정의 정규식 패턴을 만들어 사용할 수 있다.
      # "사용자 정의 정규식 패턴 이름" => "사용자 정의 정규식 패턴 정의"
      # 년, 월, 일을 "-" 또는 "/"를 사용해 구분하려면 "[-/]", "[/-]" 패턴 모두 사용할 수 있다.
      # 년, 월, 일 구분자로 "."를 추가하려는 경우 "."은 정규식에서 아무 문자 1개와 대응되는 약속된 기능이므로 "."을 문자로
      # 인식되게 하려면 "\\." 처럼 사용해야 한다.
      # [] 내부에 사용하는 "-"은 양쪽에 문자가 나오면 정규식에서 ~부터 ~까지의 의미로 사용되기 때문에 "-"을 문자로 인식되게
      # 하려면 "\-" 처럼 사용해야 한다.
      "USER_TIMESTAMP" => "%{YEAR}[-/\\.]%{MONTHNUM}[/\-\\.]%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?%{ISO8601_TIMEZONE}?"
    }
    match => {
      "message" => "\[%{USER_TIMESTAMP:timestamp}\] [ ]*\[%{DATA:id}\] %{IP:ip} %{NUMBER:port:int} \[%{LOGLEVEL:level}\] \- %{GREEDYDATA:msg}"
    }
  }
}

output {
  stdout { }
}